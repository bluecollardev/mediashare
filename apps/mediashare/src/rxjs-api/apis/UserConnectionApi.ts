// tslint:disable
/**
 * Mediashare
 * Mediashare API
 *
 * The version of the OpenAPI document: 0.1.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, OperationOpts, RawAjaxResponse } from '../runtime';
import { CreateUserConnectionDto } from '../models';

export interface UserConnectionControllerCreateUserConnectionRequest {
  createUserConnectionDto: CreateUserConnectionDto;
}

export interface UserConnectionControllerSendEmailRequest {
  userId?: any;
  email?: any;
}

/**
 * no description
 */
export class UserConnectionApi extends BaseAPI {
  /**
   */
  userConnectionControllerCreateUserConnection({ createUserConnectionDto }: UserConnectionControllerCreateUserConnectionRequest): Observable<void>;
  userConnectionControllerCreateUserConnection(
    { createUserConnectionDto }: UserConnectionControllerCreateUserConnectionRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  userConnectionControllerCreateUserConnection(
    { createUserConnectionDto }: UserConnectionControllerCreateUserConnectionRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(createUserConnectionDto, 'createUserConnectionDto', 'userConnectionControllerCreateUserConnection');

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/user-connection',
        method: 'POST',
        headers,
        body: createUserConnectionDto,
      },
      opts?.responseOpts
    );
  }

  /**
   */
  userConnectionControllerSendEmail({ userId, email }: UserConnectionControllerSendEmailRequest): Observable<void>;
  userConnectionControllerSendEmail(
    { userId, email }: UserConnectionControllerSendEmailRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  userConnectionControllerSendEmail(
    { userId, email }: UserConnectionControllerSendEmailRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    const query: HttpQuery = {};

    if (userId != null) {
      query['userId'] = userId;
    }
    if (email != null) {
      query['email'] = email;
    }

    return this.request<void>(
      {
        url: '/api/user-connection/send-email',
        method: 'POST',
        query,
      },
      opts?.responseOpts
    );
  }
}
